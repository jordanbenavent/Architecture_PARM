# Unitary testing: test vectors for alu

A[32] B[32] Shift[5] CarryIn[1] Codop[4] S[32] Flags[4]

# and then you can list the test vectors. Values are separated by spaces

# here I recall the list of the inputs and outputs :
# |              inputs	     |   outputs |
# |             A                                B                    Shift  CarryIn  Codop |                S                    Flags  |
# A and B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0000    00000000000000000000000000000000    0000
00000000000000000000000000000001  00000000000000000000000000000000    00000     0     0000    00000000000000000000000000000000    0000
00000000000000000000000000000001  00000000000000000000000000000011    00000     0     0000    00000000000000000000000000000001    0000
00000000000000000000000000000001  00000000000000000000000000000001    00000     0     0000    00000000000000000000000000000001    0000

# A xor B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0001    00000000000000000000000000000000    0000
00000000000000000000000000000001  00000000000000000000000000000001    00000     0     0001    00000000000000000000000000000000    0000
00000000000000000000000000000001  00000000000000000000000000000000    00000     0     0001    00000000000000000000000000000001    0000
00000000000000000000000000000011  00000000000000000000000000000001    00000     0     0001    00000000000000000000000000000010    0000

# B << shift
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0010    00000000000000000000000000000000    0000

# B >> shift
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0011    00000000000000000000000000000000    0000

# B >> shift (arith)
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0100    00000000000000000000000000000000    0000

# A + B + Cin
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0101    00000000000000000000000000000000    0000

# A - B + Cin - 1
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0110    00000000000000000000000000000000    0000

# B >> shift (rot)
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     0111    00000000000000000000000000000000    0000

# A and B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1000    00000000000000000000000000000000    0000

# 0 - A
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1001    00000000000000000000000000000000    0000

# A - B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1010    00000000000000000000000000000000    0000

# A + B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1011    00000000000000000000000000000000    0000

# A or B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1100    00000000000000000000000000000000    0000

# A * B
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1101    00000000000000000000000000000000    0000

# B and not A
00000000000000000000000000000001  00000000000000000000000000000000    00000     0     1110    00000000000000000000000000000000    0000
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1110    00000000000000000000000000000000    0000
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1110    00000000000000000000000000000000    0000
00000000000000000000000000000000  00000000000000000000000000000000    00000     0     1110    00000000000000000000000000000000    0000
 
# Not B
00000000000000000000000000000000  00000000000000000000000000000001    00000     0     1111    11111111111111111111111111111110    0000
00000000000000000000000000000100  00000000000000000000000000000001    00000     0     1111    11111111111111111111111111111110    0000 

# the test can then be run by hand from the GUI or in a shell: 
# java -jar .\logisim-evolution.jar -testvector .\circuit_name .\test_vector_name.txt .\file_name.circ 